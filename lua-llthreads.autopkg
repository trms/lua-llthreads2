nuget {
	nuspec {
		id = llthreads2;
		title: "llthreads2";
		version: 0.1.1.5;
		authors: {coapp, Andrew Starks, Christian Bechette, Tightrope Media Systems};
		owners: {Tightrope Media Systems};
		licenseUrl: "http://opensource.org/licenses/MIT";
		releaseNotes: {@""}; 
		requireLicenseAcceptance:false;
		summary: "This is full dropin replacement for llthreads library.";
		copyright: "Copyright 2014 Tightrope Media Systems, Saint Paul, Minnesota";
		tags: {native, Lua, module};
		description: {
@"This is full dropin replacement for llthreads library. It works with Lua 5.2 and 5.3 Work 1/2.";}
	};

	dependencies {
        // This node defines any outside items which may be needed to consume this package.
        packages : {
            // This is a list of other NuGet packages required to use this package.
            // Each item follows the format "<pkg_name>/<version>"
            lua/"[5.3.0003.02, 5.4)"
        };
    };

	files {
		// declare a lua collection
		lualib : {
			// copies the whole folder tree.
			#add-all-files : Items.llthreadsBin;
			// set the destination in the package itself. 
			#destination : ${build_root}\${conditionFolder}\llthreads2;
		};
		
		luapdb : {
			// copies the whole folder tree.
			#add-all-files : Items.llthreadsPdb;
			// set the destination in the package itself. 
			#destination : ${build_root}\${conditionFolder}\llthreads2Pdb;
		};
		
		[x64, v100, Release] {
			lualib: {".\x64\Release\llthreads.dll"};
			luapdb: {".\x64\Release\llthreads.pdb"};

		};
		
		[x64, v100, Debug] {
			lualib: {".\x64\Debug\llthreads.dll"};
			luapdb: {".\x64\Debug\llthreads.pdb"};

		};

        [win32, v100, Release] {
			lualib: {".\Win32\Release\llthreads.dll"};
			luapdb: {".\Win32\Release\llthreads.pdb"};
		};
		
		[win32, v100, Debug] {
			lualib: {".\Win32\Debug\llthreads.dll"};
			luapdb: {".\Win32\Debug\llthreads.pdb"};
		};
    };
	targets {
		AfterBuild {
			.Copy {
				DestinationFiles = "@(llthreadsBin->'$(TargetDir)%(RecursiveDir)%(Filename)%(Extension)')";
				SourceFiles = "@(llthreadsBin)";
				SkipUnchangedFiles = true;
				UseHardlinksIfPossible = true;
			};
		};
		
		AfterBuild {
			.Copy {
				DestinationFiles = "@(llthreadsPdb->'$(TargetDir)%(RecursiveDir)%(Filename)%(Extension)')";
				SourceFiles = "@(llthreadsPdb)";
				SkipUnchangedFiles = true;
				UseHardlinksIfPossible = true;
			};
		};
	}	
}